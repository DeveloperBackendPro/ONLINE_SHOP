# Generated by Django 5.0.1 on 2024-02-09 13:34

import ckeditor_uploader.fields
import colorfield.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('code', models.CharField(blank=True, max_length=1000, null=True, unique=True, verbose_name='Код')),
                ('create_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категория',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('phone', models.CharField(max_length=255, verbose_name='Телефон')),
                ('messages', models.TextField(verbose_name='Сообщения')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('create_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Связаться с нами',
                'verbose_name_plural': 'Связаться с нами',
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=100, verbose_name='Вопрос')),
                ('question_en', models.CharField(max_length=100, null=True, verbose_name='Вопрос')),
                ('question_ru', models.CharField(max_length=100, null=True, verbose_name='Вопрос')),
                ('question_uz', models.CharField(max_length=100, null=True, verbose_name='Вопрос')),
                ('response', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Ответ')),
                ('response_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Ответ')),
                ('response_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Ответ')),
                ('response_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Ответ')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('create_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Часто задаваемые вопросы',
                'verbose_name_plural': 'Часто задаваемые вопросы',
            },
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('city', models.CharField(max_length=255, verbose_name='Город')),
                ('country', models.CharField(max_length=255, verbose_name='Страна')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('phone', models.CharField(max_length=255, verbose_name='Телефон')),
                ('email', models.CharField(max_length=255, verbose_name='Почта')),
                ('about_us', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='О нас')),
                ('about_us_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='О нас')),
                ('about_us_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='О нас')),
                ('about_us_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='О нас')),
                ('facebook', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Фейсбук')),
                ('instagram', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Инстаграм')),
                ('youtube', models.URLField(blank=True, null=True, verbose_name='Юутубе')),
                ('telegram', models.URLField(blank=True, max_length=1000, null=True, verbose_name='Телеграм')),
                ('location', models.URLField(max_length=1000, verbose_name='Геолокация')),
                ('repair', models.TimeField(blank=True, null=True, verbose_name='Время')),
                ('status', models.CharField(choices=[('Open', 'Открыть'), ('Close', 'Закрыто'), ('No', 'Нет')], default='Open', max_length=15, verbose_name='Статусы')),
                ('create_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Информация',
                'verbose_name_plural': 'Информация',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/News', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Изображение')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание')),
                ('description_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Описание')),
                ('description_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Описание')),
                ('description_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('code', models.CharField(blank=True, max_length=1000, null=True, unique=True, verbose_name='Код')),
                ('create_at', models.DateField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Новости',
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_client', models.BooleanField(default=False)),
                ('full_name', models.CharField(max_length=255)),
                ('total_price', models.IntegerField(blank=True, default=0, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователь',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиент',
            },
        ),
        migrations.CreateModel(
            name='Code',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=6, verbose_name='Номер')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Коды',
                'verbose_name_plural': 'Коды',
            },
        ),
        migrations.CreateModel(
            name='News_comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('phone', models.CharField(max_length=255, verbose_name='Телефон')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('create_at', models.DateField(auto_now=True, verbose_name='Создать в')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.news', verbose_name='Новости')),
            ],
            options={
                'verbose_name': 'Комментарий к новости',
                'verbose_name_plural': 'Комментарий к новости',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('description_full', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Описание полное')),
                ('description_full_en', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Описание полное')),
                ('description_full_ru', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Описание полное')),
                ('description_full_uz', ckeditor_uploader.fields.RichTextUploadingField(null=True, verbose_name='Описание полное')),
                ('old_price', models.IntegerField(verbose_name='Старая цена')),
                ('new_price', models.IntegerField(verbose_name='Новая цена')),
                ('total_count', models.IntegerField(default=0, verbose_name='Количество продукт')),
                ('order_count', models.IntegerField(default=0, verbose_name='Количество заказов')),
                ('image', models.ImageField(upload_to='images/Product', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Изображение')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('qr_code', models.ImageField(blank=True, upload_to='images/Product/Qr_Code', verbose_name='QR код')),
                ('code', models.CharField(blank=True, max_length=1000, null=True, unique=True, verbose_name='Код')),
                ('create_at', models.DateField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='home.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукт',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None, verbose_name='Цвет')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('phone', models.CharField(max_length=255, verbose_name='Телефон')),
                ('country', models.CharField(max_length=255, verbose_name='Страна')),
                ('city', models.CharField(max_length=255, verbose_name='Город')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('zip_code', models.IntegerField(default=0, verbose_name='Почтовый индекс')),
                ('order_note', models.TextField(verbose_name='Примечание к заказу')),
                ('code', models.CharField(blank=True, max_length=1000, null=True, unique=True, verbose_name='Код')),
                ('one_id', models.CharField(blank=True, max_length=300, unique=True, verbose_name='Один идентификатор')),
                ('total_price', models.IntegerField(default=0, verbose_name='Общие цены')),
                ('qr_code', models.ImageField(blank=True, upload_to='images/Order/Qr_Code', verbose_name='QR код')),
                ('create_at', models.DateField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.client', verbose_name='Пользователь')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказ',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('phone', models.CharField(max_length=255, verbose_name='Телефон')),
                ('rate', models.IntegerField(default=1, verbose_name='Рейтинг')),
                ('text', models.TextField(verbose_name='Комментарий')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('create_at', models.DateField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарий',
            },
        ),
        migrations.CreateModel(
            name='Product_Elements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None, verbose_name='Цвет')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/Product_Elements', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Изображение')),
                ('status', models.CharField(choices=[('Yes', 'Да'), ('No', 'Нет')], default='Yes', max_length=15, verbose_name='Статусы')),
                ('create_at', models.DateField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Элементы продукта',
                'verbose_name_plural': 'Элементы продукта',
            },
        ),
        migrations.CreateModel(
            name='Shopcart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None, verbose_name='Цвет')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('create_at', models.DateField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.client', verbose_name='Пользователь')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.product', verbose_name='Продукт')),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзина',
            },
        ),
    ]
